<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.champion.dance.domain.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.champion.dance.domain.entity.Teacher" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="studio_id" property="studioId" jdbcType="VARCHAR" />
    <result column="dance_id" property="danceId" jdbcType="VARCHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="identify" property="identify" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.champion.dance.domain.entity.Teacher" extends="BaseResultMap" >
    <result column="intro" property="intro" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, nickname, mobile, sex, studio_id, dance_id, avatar_url, identify
  </sql>
  <sql id="Blob_Column_List" >
    intro
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacher
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="findAllTeacher" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from teacher
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teacher
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.champion.dance.domain.entity.Teacher" >
    insert into teacher (id, name, nickname, 
      mobile, sex, studio_id, 
      dance_id, avatar_url, identify, 
      intro)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{studioId,jdbcType=VARCHAR}, 
      #{danceId,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, #{identify,jdbcType=VARCHAR}, 
      #{intro,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.champion.dance.domain.entity.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="studioId != null" >
        studio_id,
      </if>
      <if test="danceId != null" >
        dance_id,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="identify != null" >
        identify,
      </if>
      <if test="intro != null" >
        intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="studioId != null" >
        #{studioId,jdbcType=VARCHAR},
      </if>
      <if test="danceId != null" >
        #{danceId,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="identify != null" >
        #{identify,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.champion.dance.domain.entity.Teacher" >
    update teacher
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="studioId != null" >
        studio_id = #{studioId,jdbcType=VARCHAR},
      </if>
      <if test="danceId != null" >
        dance_id = #{danceId,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="identify != null" >
        identify = #{identify,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.champion.dance.domain.entity.Teacher" >
    update teacher
    set name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      studio_id = #{studioId,jdbcType=VARCHAR},
      dance_id = #{danceId,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      identify = #{identify,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.champion.dance.domain.entity.Teacher" >
    update teacher
    set name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      studio_id = #{studioId,jdbcType=VARCHAR},
      dance_id = #{danceId,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      identify = #{identify,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>