<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.champion.dance.domain.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.champion.dance.domain.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="start_level" jdbcType="TINYINT" property="startLevel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.champion.dance.domain.entity.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, course_id, member_id, start_level, create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findByParams" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comment
    <where>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=VARCHAR}
      </if>
      <if test="courseId != null">
        and course_id = #{courseId,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="findCommentsByCourseId" parameterType="java.lang.String" resultType="com.champion.dance.domain.dto.CommentDto">
    select t.*,m.nickname,m.avatar_url,m.real_name
    from comment t join member m on m.id=t.member_id
    where t.course_id = #{courseId,jdbcType=VARCHAR}
    ORDER BY t.create_time DESC
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.champion.dance.domain.entity.Comment">
    insert into comment (id, course_id, member_id, 
      start_level, create_time, content
      )
    values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, 
      #{startLevel,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.champion.dance.domain.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="startLevel != null">
        start_level,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="startLevel != null">
        #{startLevel,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.champion.dance.domain.entity.Comment">
    update comment
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="startLevel != null">
        start_level = #{startLevel,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.champion.dance.domain.entity.Comment">
    update comment
    set course_id = #{courseId,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      start_level = #{startLevel,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.champion.dance.domain.entity.Comment">
    update comment
    set course_id = #{courseId,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      start_level = #{startLevel,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>